extends markdownTemplate, texmath
global !p
def create_table(snip):
    # retrieving single line from current string and treat it like tabstops count
    placeholders_string = snip.buffer[snip.line].strip()[2:].split("*",1)
    rows_amount = int(placeholders_string[0])
    columns_amount = int(placeholders_string[1])

    # erase current line
    snip.buffer[snip.line] = ''

    # create anonymous snippet with expected content and number of tabstops
    anon_snippet_title = ' | '.join(['$' + str(col) for col in range(1,columns_amount+1)]) + "\n"
    anon_snippet_delimiter = ':-|' * (columns_amount-1) + ":-\n"
    anon_snippet_body = ""
    for row in range(1,rows_amount+1):
        anon_snippet_body += ' | '.join(['$' + str(row*columns_amount+col) for col in range(1,columns_amount+1)]) + "\n"
    anon_snippet_table = anon_snippet_title + anon_snippet_delimiter + anon_snippet_body

    # expand anonymous snippet
    snip.expand_anon(anon_snippet_table)

endglobal

pre_expand "create_table(snip)"
snippet "tb(\d+\*\d+)" "Customizable table" Abr
endsnippet

###################
# Text formatting #
###################

snippet * "italics"
*${1:${VISUAL}}*$0
endsnippet

snippet ** "bold"
**${1:${VISUAL}}**$0
endsnippet

snippet *** "bold italics"
***${1:${VISUAL}}***$0
endsnippet


################
# Common stuff #
################
snippet link "Link to something"
[${1:${VISUAL:Text}}](${2:http://www.url.com})$0
endsnippet

snippet img "Image"
![${1:pic alt}](${2:path}${3/.+/ "/}${3:opt title}${3/.+/"/})$0
endsnippet

snippet ilc "Inline Code" iA
\`$1\`$0
endsnippet

snippet codeblock "Codeblock" Ab
\`\`\` ${1:python}
${2:${VISUAL:code here}}
\`\`\`
$0
endsnippet

snippet refl "Reference Link" i
[${1:${VISUAL:Text}}][${2:id}]
[$2]:${4:http://www.url.com} "${5:$4}"
endsnippet

# example using snip.c
snippet random "random" b
`!p import random
if not snip.c:
	snip.rv=str(random.random())`
endsnippet
