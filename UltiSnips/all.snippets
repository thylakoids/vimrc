priority -60

global !p
from vimsnippets import *
def runexpression(s):
	import time
	s = s.strip()

	# time.time 的值也会变, 改写这个函数
	timetime = time.time
	def mytimetime():
		return int(timetime()) + 0.000001
	time.time = mytimetime

	# 跟当前区域相关的函数也一直改变
	if s == 't':
		return '<UltiSnips.text_objects.python_code._Tabs object at 0x?????????>'
	if s == 'time.time':
		return '<function runexpression.<locals>.mytimetime at 0x?????????> '

	random.seed(int(time.time()/60))
	try:
		return eval(s)
	except Exception:
		return ''
endglobal
#########
#  box  #
#########

snippet box "A nice box with the current comment symbol" b
`!p
box = make_box(len(t[1]))
snip.rv = box[0]
snip += box[1]
`${1:${VISUAL:content}}`!p
box = make_box(len(t[1]))
snip.rv = box[2]
snip += box[3]`
$0
endsnippet

snippet bbox "Box"
`!p snip.rv = '┌' + '─' * (len(t[1]) + 2) + '┐'`
│ $1 │
`!p snip.rv = '└' + '─' * (len(t[1]) + 2) + '┘'`
$0
endsnippet

#########
# DATES #
#########
snippet date "Month DD, YYYY" w
`!v strftime("%b %d, %Y")`
endsnippet


snippet time "hh:mm" w
`!v strftime("%H:%M")`
endsnippet

snippet datetime "YYYY-MM-DD hh:mm" w
`!v strftime("%Y-%m-%d %H:%M")`
endsnippet

#################
#  parentheses  #
#################
snippet '("")|(\'\')|(``)|(\(\))|(\[\])|({})|(<>)' "parentheses and quote" ri
`!p snip.rv = match.group(0)[0]`${1:${VISUAL}}`!p snip.rv = match.group(0)[1]`$0
endsnippet

##############
#  complete  #
##############
snippet st "Status" b
status $1`!p snip.rv=complete(t[1], ['start', 'stop', 'restart'])`
endsnippet

snippet color "color names" w
$1`!p snip.rv=complete(t[1], ['blue', 'orange', 'green', 'red', 'purple', 'brown', 'pink', 'olive', 'cyan', 'magenta'])`
endsnippet

# snippet gt "Conventional commits" Ab
# $1`!p snip.rv=complete(t[1], ['feat', 'fix', 'docs', 'style', 'refactor', 'pref', 'test', 'chore', 'BREAKING CHANGE'])`(${2:scope}): $3
# endsnippet

#  python exp  #
################
snippet python "python block" Ab
`!p snip.rv=get_nerdcomment_format()[0]`python[  $1 = `!p snip.rv = runexpression(t[1])`  ]python`!p snip.rv=get_nerdcomment_format()[1]`
endsnippet

priority 100
snippet 'python\[\s*(.*?)\s*=.*?\]python' "evaluate python" Ar
python[  ${1:`!p snip.rv=match.group(1)`} = `!p snip.rv = runexpression(t[1])`  ]python
endsnippet

##################
#  Greek letter  #
##################
snippet phi "Greek letter:phi φ" Aw
φ
endsnippet

snippet theta "Greek letter:theta θ" Aw
θ
endsnippet

##########
#  ccls  #
##########
snippet ccls "template for .ccls" b
$0-I
../include
-I
../vendor/include
-std=c++14
-stdlib=libc++
-fPIC

-isystem
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1
-isystem
/Library/Developer/CommandLineTools/usr/lib/clang/12.0.0/include
-isystem
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
-isystem
/Library/Developer/CommandLineTools/usr/include
-isystem
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory)
endsnippet
